//const ws = new WebSocket("ws://localhost:9865/websocketurl", ["Eigenes", "Zweites"])
const ws = new WebSocket("ws://localhost:9865/websocketurl")

const sender = document.getElementById('sender')
sender.onclick = () => ws.send("Das kommt aus dem schÃ¶nen WebScoket!ðŸ˜ƒðŸ˜ƒðŸ˜ƒ")
//sender.onclick = () => ws.send("let opcode: Opcode = LanguagePrimitives.EnumOfValue (buffer.[0] &&& 0xfuy)match opcode with| Opcode.Close -> () // TODO: close ()| Opcode.Ping | Opcode.Pong | Opcode.Text | Opcode.ContinuationFrame -> ()| _ -> () // TODO: close ()let mask = buffer.[1] >>> 7let lengthCode = buffer.[1] &&& ~~~0x80uylet! length = async {    match lengthCode with    | l when l < 126uy -> return int64 l    | 126uy ->         let! buffer = networkStream.AsyncRead 2        let n = BitConverter.ToUInt16 (buffer, 0)        return int64 (BinaryPrimitives.ReverseEndianness n)    | 127uy ->         let! buffer = networkStream.AsyncRead 8        let n = BitConverter.ToUInt64 (buffer, 0)        return int64 (BinaryPrimitives.ReverseEndianness n)    | 0uy when opcode = Opcode.Ping ->         // TODO: Send pong        // await MessageReceivingAsync(action);        // return        return 0L    | _ -> return 0L // TODO: close ()}printfn LÃ¤nge: %d (int length)// 			if (length < 126)// 			{// 				if (mask == 1)// 					read += Read(headerBuffer, read, 4);// 			}// 			else if (length == 126)// 			{// 				// If length is 126, the following 2 bytes (16-bit unsigned integer), if 127, the following 8 ")